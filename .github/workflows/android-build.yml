name: Build Android APK

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install dependencies
        run: npm install

      - name: Build mobile app
        run: npm run build:mobile

      - name: Add Android platform (if not exists)
        run: |
          if [ ! -d "android" ]; then
            npx cap add android
          else
            echo "Android platform already exists, skipping add step"
          fi

      - name: Configure Android for Java 17
        run: |
          # Set Java 17 compatibility in app build.gradle
          if ! grep -q "compileOptions" android/app/build.gradle; then
            sed -i '/buildTypes {/i\    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_17\n        targetCompatibility JavaVersion.VERSION_17\n    }' android/app/build.gradle
          fi
          
          # Set Java 17 compatibility globally in root build.gradle
          if ! grep -q "afterEvaluate" android/build.gradle; then
            cat >> android/build.gradle << 'EOF'

// Force Java 17 for all modules
allprojects {
    afterEvaluate { project ->
        if (project.hasProperty('android')) {
            project.android {
                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_17
                    targetCompatibility JavaVersion.VERSION_17
                }
            }
        }
    }
}
EOF
          fi
          
          # Configure gradle.properties with current JAVA_HOME
          if ! grep -q "org.gradle.java.home" android/gradle.properties; then
            echo "org.gradle.java.home=$JAVA_HOME" >> android/gradle.properties
          fi

      - name: Sync Capacitor
        run: npx cap sync android

      - name: Set Gradle wrapper permissions
        run: chmod +x android/gradlew

      - name: Build Android APK
        run: |
          echo "JAVA_HOME: $JAVA_HOME"
          java -version
          cd android
          ./gradlew assembleDebug --no-daemon

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk

      - name: Upload APK to release (if main branch)
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "mobile-${{ github.sha }}"
          name: "Mobile Release ${{ github.sha }}"
          files: android/app/build/outputs/apk/debug/app-debug.apk
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}